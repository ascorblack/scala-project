services:
  postgres:
    image: postgres:17-alpine
    command:
      - "postgres"
      - "-c"
      - "max_connections=1000"
      - "-c"
      - "shared_buffers=1GB"
      - "-c"
      - "effective_cache_size=4GB"
      - "-c"
      - "work_mem=16MB"
      - "-c"
      - "maintenance_work_mem=512MB"
      - "-c"
      - "random_page_cost=1.1"
      - "-c"
      - "temp_file_limit=10GB"
      - "-c"
      - "log_min_duration_statement=200ms"
      - "-c"
      - "idle_in_transaction_session_timeout=10s"
      - "-c"
      - "lock_timeout=1s"
      - "-c"
      - "statement_timeout=60s"
      - "-c"
      - "shared_preload_libraries=pg_stat_statements"
      - "-c"
      - "pg_stat_statements.max=10000"
      - "-c"
      - "pg_stat_statements.track=all"
    environment:
      POSTGRES_DB: "project"
      POSTGRES_USER: "dev"
      POSTGRES_PASSWORD: "752113"
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - habrdb-data:/var/lib/postgresql/data
    ports:
      - "5435:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U habrpguser -d habrdb" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G

  scala-shit:
    build: scala/.
    container_name: scala-fucking-shit
    volumes:
      - ./scala:/app
      - ./images:/app/images
    ports:
      - "8888:8888"
    environment:
      POSTGRES_DB: "project"
      POSTGRES_USER: "dev"
      POSTGRES_PASSWORD: "752113"
      POSTGRES_HOST: "postgres"
      POSTGRES_PORT: "5432"
      HOST: "0.0.0.0"
      PORT: "8888"
      IMAGES_PATH: /app/images
    depends_on:
      - postgres


volumes:
  habrdb-data:
